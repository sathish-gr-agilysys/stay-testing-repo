<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.agilysys.pms</groupId>
    <artifactId>stay-root-pom</artifactId>
    <version>74.1889.0</version>
    <packaging>pom</packaging>
    <name>Stay Root POM (for Spring Boot)</name>
    <parent>
        <groupId>com.agilysys.platform</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>5.0.24</version>
    </parent>
    <properties>
        <!-- spring-boot-parent -->
        <spring-cloud.version>Edgware.SR6</spring-cloud.version>
        <spring-data-release-train>Ingalls-SR23</spring-data-release-train>
        <spring-rabbit.version>1.7.14.RELEASE</spring-rabbit.version>
        <!-- dependencyManagementBase -->
        <apache-codec.version>1.10</apache-codec.version>
        <apache-commons-beanutils.version>1.9.3</apache-commons-beanutils.version>
        <apache-commons-lang.version>3.4</apache-commons-lang.version>
        <apache-httpcomponents.version>4.5.5</apache-httpcomponents.version>
        <aspectj.version>1.8.13</aspectj.version>
        <com-robust-it-cloning-version>1.9.0</com-robust-it-cloning-version>
        <commons-logging.version>1.1.3</commons-logging.version>
        <dropwizard.version>3.1.5</dropwizard.version>
        <elasticsearch.version>7.3.1</elasticsearch.version>
        <google-guava.version>27.0.1-jre</google-guava.version>
        <gson.version>2.8.2</gson.version>
        <hibernate-validator.version>5.3.6.Final</hibernate-validator.version>
        <jackson-core.version>2.8.11</jackson-core.version>
        <jackson-databind.version>2.8.11.1</jackson-databind.version>
        <jackson-jaxrs.version>2.8.11</jackson-jaxrs.version>
        <javax.serviet-api.version>3.1.0</javax.serviet-api.version>
        <joda-time.version>2.9.9</joda-time.version>
        <libphonenumber.version>8.10.2</libphonenumber.version>
        <logback.version>1.1.11</logback.version>
        <mockito-core.version>2.8.9</mockito-core.version>
        <mustache.java.version>0.9.6</mustache.java.version>
        <org.apache.activemq.version>5.9.0</org.apache.activemq.version>
        <slf4j.version>1.7.25</slf4j.version>
        <xstream.version>1.4.9</xstream.version>
        <!-- dependency-management-slim -->
        <dependency-management.version>3.0.21</dependency-management.version>
        <org.apache.cxf.version>3.1.15</org.apache.cxf.version>
        <!-- platform -->
        <authservice.version>5.0.106</authservice.version>
        <platform-dependency-management.version>5.0.177.19</platform-dependency-management.version>
        <platformauth.version>5.0.28.7</platformauth.version>
        <userservice.version>5.0.110</userservice.version>
        <communicationservice.version>5.0.228.1</communicationservice.version>
        <!-- stay -->
        <caffeine.version>2.7.0</caffeine.version>
        <commons-cli.version>1.3.1</commons-cli.version>
        <commons-collections4.version>4.0</commons-collections4.version>
        <commons-pool2.version>2.3</commons-pool2.version>
        <commons-validator.version>1.4.0</commons-validator.version>
        <eclipse-ecj.version>4.5.1</eclipse-ecj.version>
        <flyingsaucer.version>9.1.18</flyingsaucer.version>
        <hibernate-jpa-2.1-api.version>1.0.0.Final</hibernate-jpa-2.1-api.version>
        <hibernatetypes.version>2.9.10</hibernatetypes.version>
        <io.jsonwebtoken.version>0.11.1</io.jsonwebtoken.version>
        <jadira.usertype.core.version>5.0.0.GA</jadira.usertype.core.version>
        <jasypt.version>1.9.2</jasypt.version>
        <json-path.version>2.2.0</json-path.version>
        <jsoup.version>1.12.1</jsoup.version>
        <liquibase.version>4.3.5</liquibase.version>
        <logback-elasticsearch-appender.version>1.6</logback-elasticsearch-appender.version>
        <newrelic-agent.version>5.9.0</newrelic-agent.version>
        <newrelic-hikari.version>2.4.0</newrelic-hikari.version>
        <postgresql.version>42.2.8</postgresql.version>
        <powermock.version>1.7.3</powermock.version>
        <quartz.version>2.3.1</quartz.version>
        <spring-data-mongodb.version>1.10.24.AGYS</spring-data-mongodb.version>
        <spring-ws.version>3.0.8.RELEASE</spring-ws.version>
        <springfox-swagger.version>2.7.0</springfox-swagger.version>
        <testng.version>6.8.8</testng.version>
        <tika.version>1.18</tika.version>
        <xmlgraphics.vesion>1.11</xmlgraphics.vesion>
        <!-- maven -->
        <build.helper.maven.plugin.version>3.0.0</build.helper.maven.plugin.version>
        <maven.antrun.plugin.version>1.7</maven.antrun.plugin.version>
        <maven.dependency.list.plugin.version>0.0.2</maven.dependency.list.plugin.version>
        <maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>
        <maven.exec.plugin.version>1.3.1</maven.exec.plugin.version>
        <maven.failsafe.plugin.fork.count>1</maven.failsafe.plugin.fork.count>
        <maven.failsafe.plugin.useForks>true</maven.failsafe.plugin.useForks>
        <maven.failsafe.plugin.version>2.15</maven.failsafe.plugin.version>
        <maven.jar.plugin.version>2.4</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
        <maven.process-exec.plugin.version>0.8</maven.process-exec.plugin.version>
        <maven.replacer.plugin.version>1.5.1</maven.replacer.plugin.version>
        <maven.shade.plugin.version>3.2.4</maven.shade.plugin.version>
        <maven.source.plugin.version>2.0.4</maven.source.plugin.version>
        <maven.surefire.report.plugin.version>2.12.4</maven.surefire.report.plugin.version>
        <maven.tomcat7.plugin.version>2.2</maven.tomcat7.plugin.version>
        <maven.war.plugin.version>2.3</maven.war.plugin.version>
        <properties.maven.plugin.version>1.0.0</properties.maven.plugin.version>
        <!-- test -->
        <jacoco.it.file>jacoco-it.exec</jacoco.it.file>
        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
        <jacoco.ut.file>jacoco-ut.exec</jacoco.ut.file>
        <jacoco.version>0.7.1.201405082137</jacoco.version>
        <sonar.host.url>https://sonar.hospitalityrevolution.com</sonar.host.url>
        <sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
        <sonar.jacoco.reportPath>${jacoco.outputDir}/jacoco/${jacoco.ut.file}</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/jacoco/${jacoco.it.file}</sonar.jacoco.itReportPath>
        <sonar.jdbc.password>sonar</sonar.jdbc.password>
        <sonar.jdbc.url>jdbc:postgresql://sonar.bellevue.agilysys.com/sonar</sonar.jdbc.url>
        <sonar.jdbc.username>sonar</sonar.jdbc.username>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.plugin.version>3.9.0.2155</sonar.plugin.version>
        <!-- everything else -->
        <docker.baseImage.springBoot>docker-registry.bellevue.agilysys.com:5000/official/java:C1.8.0.232-1</docker.baseImage.springBoot>
        <docker.maven.plugin.version>0.4.13</docker.maven.plugin.version>
        <docker.registry>docker-registry.bellevue.agilysys.com:5000</docker.registry>
        <docker.skip>true</docker.skip>
        <mongodb-cmd>mongo</mongodb-cmd>
        <mongodb-dbname>ProjectVictors</mongodb-dbname>
        <mongodb-server>localhost</mongodb-server>
        <project.build.encoding>UTF-8</project.build.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <swagger-plugin.version>3.1.7</swagger-plugin.version>
        <xRay.graphFilter>^com\.agilysys\.(pms|common)\.</xRay.graphFilter>
        <xRay.locationFilter>${xRay.graphFilter}</xRay.locationFilter>
        <xRay.runtimePath>${project.build.directory}/x-ray/${project.artifactId}.graph.csv</xRay.runtimePath>
        <xRay.version>1.0.1</xRay.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>com.agilysys</groupId>
                <artifactId>dependency-management-slim</artifactId>
                <version>${dependency-management.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.agilysys.platform</groupId>
                <artifactId>auth-spring-boot</artifactId>
                <version>${platformauth.version}</version>
            </dependency>
            <dependency>
                <groupId>com.agilysys.platform</groupId>
                <artifactId>communication-service-interface</artifactId>
                <version>${communicationservice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.agilysys.platform</groupId>
                <artifactId>communication-service-client-lib</artifactId>
                <version>${communicationservice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.agilysys.platform</groupId>
                <artifactId>platform-dependency-management</artifactId>
                <version>${platform-dependency-management.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-smile</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-base</artifactId>
                <version>${jackson-jaxrs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson-jaxrs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jsonSchema</artifactId>
                <version>${jackson-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>${swagger-plugin.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.ws.rs</groupId>
                        <artifactId>jsr311-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.github.spullara.mustache.java</groupId>
                <artifactId>compiler</artifactId>
                <version>${mustache.java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>${libphonenumber.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.internetitem</groupId>
                <artifactId>logback-elasticsearch-appender</artifactId>
                <version>${logback-elasticsearch-appender.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.newrelic.agent.java</groupId>
                <artifactId>newrelic-api</artifactId>
                <version>${newrelic-agent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.newrelic.agent.java.extension</groupId>
                <artifactId>hikaricp</artifactId>
                <version>${newrelic-hiraki.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${apache-commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${apache-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-healthchecks</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-json</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.serviet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-camel</artifactId>
                <version>${org.apache.activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-pool</artifactId>
                <version>${org.apache.activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${org.apache.cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${org.apache.cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${org.apache.cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache-httpcomponents.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${tika.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.xmlgraphics</groupId>
                <artifactId>batik-transcoder</artifactId>
                <version>${xmlgraphics.vesion}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jdt.core.compiler</groupId>
                <artifactId>ecj</artifactId>
                <version>${eclipse-ecj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.core</artifactId>
                <version>${jadira.usertype.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jasypt</groupId>
                <artifactId>jasypt</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate-jpa-2.1-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <scope>test</scope>
                <version>${powermock.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <scope>test</scope>
                <version>${powermock.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.amqp</groupId>
                <artifactId>spring-rabbit</artifactId>
                <version>${spring-rabbit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-jdbc</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.vaadin.external.google</groupId>
                        <artifactId>android-json</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mockito</groupId>
                        <artifactId>mockito-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- https://github.com/apeloquin-agilysys/spring-data-mongodb -->
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-mongodb</artifactId>
                <version>${spring-data-mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-releasetrain</artifactId>
                <version>${spring-data-release-train}</version>
                <scope>import</scope>
                <type>pom</type>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.data</groupId>
                        <artifactId>spring-data-mongodb-parent</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.ws</groupId>
                <artifactId>spring-ws-core</artifactId>
                <version>${spring-ws.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.ws</groupId>
                <artifactId>spring-xml</artifactId>
                <version>${spring-ws.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.xhtmlrenderer</groupId>
                <artifactId>flying-saucer-core</artifactId>
                <version>${flyingsaucer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xhtmlrenderer</groupId>
                <artifactId>flying-saucer-pdf-openpdf</artifactId>
                <version>${flyingsaucer.version}</version>
            </dependency>
            <dependency>
                <groupId>uk.com.robust-it</groupId>
                <artifactId>cloning</artifactId>
                <version>${com-robust-it-cloning-version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Profile for running integration tests -->
        <profile>
            <id>ITEST</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <groups>com.agilysys.platform.common.junit.IntegrationTestCategory</groups>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>SITEST</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <groups>com.agilysys.platform.common.junit.IntegrationTestCategory,com.agilysys.pms.common.PipelineIntegrationTestCategory</groups>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sonar</id>
            <build>
                <plugins>
                    <!-- Sonar Qube Configuration -->
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>6.1.5</version>
                        <configuration>
                            <skipProvidedScope>true</skipProvidedScope>
                            <skipRuntimeScope>true</skipRuntimeScope>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>${jacoco.agent.ut.arg}</argLine>
                            <!-- arbitrary but real interface referenced here to clear out IntegrationTestCategory -->
                            <excludedGroups>java.lang.Runnable</excludedGroups>
                            <includes>
                                <include>**/Test*.java</include>
                                <include>**/*Test.java</include>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <argLine>-Xmx1024m ${jacoco.agent.ut.arg}</argLine>
                            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-ut-agent</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                    <propertyName>jacoco.agent.ut.arg</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-ut-agent</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <append>true</append>
                            <dumpOnExit>true</dumpOnExit>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar.plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${sonar-jacoco-listeners.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.surefire.report.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <configuration>
                            <name>ProjectVictors API Docs</name>
                            <description>Auto-generated REST API Documentation</description>
                            <header>&lt;h1&gt;Agilysys ProjectVictors API (${project.version})&lt;/h1&gt;</header>
                            <footer>&lt;div class="footer"&gt;Copyright (c) 2013&lt;/div&gt;</footer>
                            <tags>
                                <tag>
                                    <name>HTTP</name>
                                    <placement>m</placement>
                                    <head>HTTP Response Codes:</head>
                                </tag>
                                <tag>
                                    <name>returnWrapped</name>
                                    <placement>m</placement>
                                    <head>Contents of string based response:</head>
                                </tag>
                            </tags>
                            <additionalparam>-Xdoclint:all -Xdoclint:-missing</additionalparam>
                            <additionalOptions>-Xdoclint:all -Xdoclint:-missing</additionalOptions>
                            <additionalJOptions>
                                <additionalJOption>-Xdoclint:all</additionalJOption>
                                <additionalJOption>-Xdoclint:-missing</additionalJOption>
                            </additionalJOptions>
                        </configuration>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <verbose>true</verbose>
                    <fork>true</fork>
                    <compilerVersion>1.8</compilerVersion>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.reformanda.semper</groupId>
                <artifactId>dependencyversion-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>set-dependency-version-properties</id>
                        <goals>
                            <goal>set-version</goal>
                        </goals>
                        <configuration>
                            <propertySets>
                                <propertySet>
                                    <transitive>false</transitive>
                                </propertySet>
                            </propertySets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-Job>${env.build-job}</Build-Job>
                            <Build-Number>${env.build-number}</Build-Number>
                            <BuildDate>${env.build-timestamp}</BuildDate>
                            <Build-Url>${env.build-url}</Build-Url>
                            <Name>${project.name}</Name>
                            <Version>${project.version}</Version>
                            <GroupId>${project.groupId}</GroupId>
                            <ArtifactId>${project.artifactId}</ArtifactId>
                            <Git-Commit>${env.git-commit}</Git-Commit>
                            <Git-Branch>${env.git-branch}</Git-Branch>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>com.agilysys.platform.common.junit.IntegrationTestCategory</excludedGroups>
                    <excludedGroups>com.agilysys.pms.common.ServiceIntegrationTestCategory</excludedGroups>
                    <excludedGroups>com.agilysys.pms.common.PipelineIntegrationTestCategory</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <version>${maven.replacer.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>replaceTokens</id>
                            <!-- Override phase in child to: prepare-package -->
                            <phase>none</phase>
                            <goals>
                                <goal>replace</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <file>target/test-classes/service-test.properties</file>
                        <replacements>
                            <replacement>
                                <token>mongodb-dbname=.*</token>
                                <value>mongodb-dbname=${mongodb-dbname}</value>
                            </replacement>
                        </replacements>
                        <regexFlags>
                            <regexFlag>UNICODE_CASE</regexFlag>
                        </regexFlags>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven.surefire.report.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build.helper.maven.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>reserve-network-port</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>reserve-network-port</goal>
                            </goals>
                            <configuration>
                                <minPortNumber>8100</minPortNumber>
                                <maxPortNumber>8300</maxPortNumber>
                                <randomPort>true</randomPort>
                                <portNames>
                                    <portName>service.http.port</portName>
                                    <portName>user.service.http.port</portName>
                                    <portName>tax.service.http.port</portName>
                                    <portName>auth.service.http.port</portName>
                                    <portName>property.service.http.port</portName>
                                    <portName>payment.service.http.port</portName>
                                    <portName>account.service.http.port</portName>
                                    <portName>reservation.service.http.port</portName>
                                </portNames>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>com/agilysys/**/api/**/*.class</exclude>
                            <exclude>com/agilysys/**/client/**/*.class</exclude>
                            <exclude>com/agilysys/**/domain/**/*.class</exclude>
                            <exclude>com/agilysys/**/model/**/*.class</exclude>
                            <exclude>com/agilysys/**/config/**/*.class</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/jacoco.exec</destFile>
                                <propertyName>failsafe.argLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <configuration>
                        <forkCount>${maven.failsafe.plugin.fork.count}</forkCount>
                        <reuseForks>${maven.failsafe.plugin.useForks}</reuseForks>
                        <includes>
                            <include>**/*.class</include>
                        </includes>
                        <argLine>${failsafe.argLine}</argLine>
                        <runOrder>alphabetical</runOrder>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <!-- Override phase in child to: process-test-classes -->
                            <id>download-auth-service</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.platform</groupId>
                                        <artifactId>auth-service</artifactId>
                                        <type>war</type>
                                        <version>${authservice.version}</version>
                                        <destFileName>auth-service.war</destFileName>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: process-test-classes -->
                            <id>download-mongo-ops</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.pms</groupId>
                                        <artifactId>mongo-ops-app</artifactId>
                                        <type>jar</type>
                                        <version>${stay.mongo-ops.resolved-version}</version>
                                        <destFileName>mongo-ops-app.jar</destFileName>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: process-test-classes -->
                            <id>download-user-service</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.platform</groupId>
                                        <artifactId>user-service</artifactId>
                                        <type>war</type>
                                        <version>${userservice.version}</version>
                                        <destFileName>user-service.war</destFileName>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: prepare-package -->
                            <id>unpack-mongo-ops-data</id>
                            <phase>none</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.pms</groupId>
                                        <artifactId>mongo-ops-data</artifactId>
                                        <type>tar.gz</type>
                                        <version>${stay.mongo-ops.resolved-version}</version>
                                    </artifactItem>
                                </artifactItems>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: prepare-package -->
                            <id>unpack-newrelic-extensions</id>
                            <phase>none</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.pms</groupId>
                                        <artifactId>pms-common</artifactId>
                                        <version>${stay.pms-common.resolved-version}</version>
                                        <includes>newrelic/**</includes>
                                    </artifactItem>
                                </artifactItems>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: prepare-package -->
                            <id>download-newrelic-hikari-extension</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.newrelic.agent.java.extension</groupId>
                                        <artifactId>hikaricp</artifactId>
                                        <version>${newrelic-hikari.version}</version>
                                    </artifactItem>
                                </artifactItems>
                                <outputDirectory>${project.build.directory}/newrelic</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: process-test-classes -->
                            <id>unpack-startup-files</id>
                            <phase>none</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys.pms</groupId>
                                        <artifactId>pms-common</artifactId>
                                        <version>${stay.pms-common.resolved-version}</version>
                                        <type>test-jar</type>
                                        <includes>startup/**</includes>
                                    </artifactItem>
                                    <artifactItem>
                                        <groupId>com.agilysys.pms</groupId>
                                        <artifactId>pms-common</artifactId>
                                        <version>${stay.pms-common.resolved-version}</version>
                                        <type>tar</type>
                                        <classifier>test-bootstrapData</classifier>
                                        <includes>platform-bootstrap.js</includes>
                                    </artifactItem>
                                </artifactItems>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: prepare-package -->
                            <id>unpack-x-ray-assembly</id>
                            <phase>none</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.agilysys</groupId>
                                        <artifactId>x-ray</artifactId>
                                        <version>${xRay.version}</version>
                                        <includes>x-ray-assembly.xml</includes>
                                    </artifactItem>
                                </artifactItems>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: initialize -->
                            <id>unzip-suc</id>
                            <phase>none</phase>
                            <goals>
                                <goal>unpack-dependencies</goal>
                            </goals>
                            <configuration>
                                <includeGroupIds>com.agilysys</includeGroupIds>
                                <includeArtifactIds>python-startup-user-creator</includeArtifactIds>
                                <outputDirectory>${project.basedir}/target</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven.exec.plugin.version}</version>
                    <executions>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-platform-bootstrap</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>${mongodb-cmd}</executable>
                                <workingDirectory>${project.build.directory}</workingDirectory>
                                <arguments>
                                    <argument>${mongodb-server}/${mongodb-dbname}</argument>
                                    <argument>platform-bootstrap.js</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-platform-startup-user</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>${mongodb-cmd}</executable>
                                <workingDirectory>${project.build.directory}/startup</workingDirectory>
                                <arguments>
                                    <argument>${mongodb-server}/${mongodb-dbname}</argument>
                                    <argument>platform-startup-user.js</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-stay-startup-user</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>${mongodb-cmd}</executable>
                                <workingDirectory>${project.build.directory}/startup</workingDirectory>
                                <arguments>
                                    <argument>${mongodb-server}/${mongodb-dbname}</argument>
                                    <argument>stay-startup-user.js</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: package -->
                            <id>run-x-ray-scan-war</id>
                            <phase>none</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <includeProjectDependencies>false</includeProjectDependencies>
                                <includePluginDependencies>true</includePluginDependencies>
                                <executableDependency>
                                    <groupId>com.agilysys</groupId>
                                    <artifactId>x-ray</artifactId>
                                </executableDependency>
                                <mainClass>com.agilysys.xray.XRayApp</mainClass>
                                <arguments>
                                    <argument>scan</argument>
                                    <argument>${project.build.finalName}</argument>
                                    <argument>${project.build.directory}/${project.build.finalName}</argument>
                                    <argument>${xRay.graphFilter}</argument>
                                    <argument>${xRay.locationFilter}</argument>
                                    <argument>${project.build.directory}/x-ray</argument>
                                </arguments>
                                <killAfter>-1</killAfter>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: package -->
                            <id>run-x-ray-scan-library</id>
                            <phase>none</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <includeProjectDependencies>false</includeProjectDependencies>
                                <includePluginDependencies>true</includePluginDependencies>
                                <executableDependency>
                                    <groupId>com.agilysys</groupId>
                                    <artifactId>x-ray</artifactId>
                                </executableDependency>
                                <mainClass>com.agilysys.xray.XRayApp</mainClass>
                                <arguments>
                                    <argument>scan</argument>
                                    <argument>${project.artifactId}</argument>
                                    <argument>${project.build.outputDirectory}</argument>
                                    <argument>${xRay.graphFilter}</argument>
                                    <argument>${xRay.locationFilter}</argument>
                                    <argument>${project.build.directory}/x-ray</argument>
                                </arguments>
                                <killAfter>-1</killAfter>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.agilysys</groupId>
                            <artifactId>x-ray</artifactId>
                            <version>${xRay.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.bazaarvoice.maven.plugins</groupId>
                    <artifactId>process-exec-maven-plugin</artifactId>
                    <version>${maven.process-exec.plugin.version}</version>
                    <executions>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-auth-service</id>
                            <phase>none</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <name>auth-service</name>
                                <healthcheckUrl>http://localhost:${auth.service.http.port}/auth-service/generalhealthcheck</healthcheckUrl>
                                <waitAfterLaunch>60</waitAfterLaunch>
                                <arguments>
                                    <argument>${env.JAVA_HOME}/bin/java</argument>
                                    <argument>-jar</argument>
                                    <argument>${project.build.directory}/dependency/auth-service.war</argument>
                                    <argument>--server.port=${auth.service.http.port}</argument>
                                    <argument>--mongodb-dbname=${mongodb-dbname}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-index-update</id>
                            <phase>none</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <name>mongo-ops</name>
                                <arguments>
                                    <argument>${env.JAVA_HOME}/bin/java</argument>
                                    <argument>-jar</argument>
                                    <argument>${project.build.directory}/dependency/mongo-ops-app.jar</argument>
                                    <argument>-d</argument>
                                    <argument>./data</argument>
                                    <argument>-p</argument>
                                    <argument>test-classes/service-test.properties</argument>
                                    <argument>-a</argument>
                                    <argument>update-indexes</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: pre-integration-test -->
                            <id>run-user-service</id>
                            <phase>none</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <name>user-service</name>
                                <healthcheckUrl>http://localhost:${user.service.http.port}/user-service/generalhealthcheck</healthcheckUrl>
                                <waitAfterLaunch>90</waitAfterLaunch>
                                <arguments>
                                    <argument>${env.JAVA_HOME}/bin/java</argument>
                                    <argument>-jar</argument>
                                    <argument>${project.build.directory}/dependency/user-service.war</argument>
                                    <argument>--server.port=${user.service.http.port}</argument>
                                    <argument>--authServiceUri=http://localhost:${auth.service.http.port}/auth-service</argument>
                                    <argument>--mongodb-dbname=${mongodb-dbname}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: post-integration-test -->
                            <id>stop-all</id>
                            <phase>none</phase>
                            <goals>
                                <goal>stop-all</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>${maven.tomcat7.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>tomcat-run</id>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <fork>true</fork>
                                <port>${service.http.port}</port>
                                <addWarDependenciesInClassloader>false</addWarDependenciesInClassloader>
                                <mode>context</mode>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tomcat-shutdown</id>
                            <goals>
                                <goal>shutdown</goal>
                            </goals>
                            <phase>post-integration-test</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.report.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <name>ProjectVictors API Docs</name>
                        <description>Auto-generated REST API Documentation</description>
                        <header>&lt;h1&gt;Agilysys ProjectVictors API (${project.version})&lt;/h1&gt;</header>
                        <footer>&lt;div class="footer"&gt;Copyright (c) 2013&lt;/div&gt;</footer>
                        <tags>
                            <tag>
                                <name>HTTP</name>
                                <placement>m</placement>
                                <head>HTTP Response Codes:</head>
                            </tag>
                            <tag>
                                <name>returnWrapped</name>
                                <placement>m</placement>
                                <head>Contents of string based response:</head>
                            </tag>
                        </tags>
                        <additionalparam>-Xdoclint:all -Xdoclint:-missing</additionalparam>
                        <additionalJOptions>
                            <additionalJOption>-Xdoclint:all</additionalJOption>
                            <additionalJOption>-Xdoclint:-missing</additionalJOption>
                        </additionalJOptions>
                    </configuration>
                </plugin>
                <plugin>
                    <inherited>true</inherited>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Build-Job>${env.build-job}</Build-Job>
                                <Build-Number>${env.build-number}</Build-Number>
                                <BuildDate>${env.build-timestamp}</BuildDate>
                                <Build-Url>${env.build-url}</Build-Url>
                                <Name>${project.name}</Name>
                                <Version>${project.version}</Version>
                                <GroupId>${project.groupId}</GroupId>
                                <ArtifactId>${project.artifactId}</ArtifactId>
                                <Git-Commit>${env.git-commit}</Git-Commit>
                                <Git-Branch>${env.git-branch}</Git-Branch>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <executions>
                        <execution>
                            <!-- Override phase in child to: package or post-integration-test -->
                            <id>package-x-ray-output</id>
                            <phase>none</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <descriptors>
                                    <descriptor>${project.build.directory}/x-ray-assembly.xml</descriptor>
                                </descriptors>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: post-integration-test -->
                            <id>package-x-ray-output-release</id>
                            <phase>none</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <descriptors>
                                    <descriptor>${project.build.directory}/x-ray-assembly.xml</descriptor>
                                </descriptors>
                                <archiveBaseDirectory>../../../ServiceTest</archiveBaseDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- Override phase in child to: post-integration-test -->
                            <id>package-x-ray-output-release-alt</id>
                            <phase>none</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <descriptors>
                                    <descriptor>${project.build.directory}/x-ray-assembly.xml</descriptor>
                                </descriptors>
                                <archiveBaseDirectory>../../../test</archiveBaseDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.kongchen</groupId>
                    <artifactId>swagger-maven-plugin</artifactId>
                    <version>${swagger-plugin.version}</version>
                    <configuration>
                        <apiSources>
                            <apiSource>
                                <springmvc>false</springmvc>
                                <schemes>http,https</schemes>
                                <swaggerDirectory>${basedir}/target</swaggerDirectory>
                            </apiSource>
                        </apiSources>
                    </configuration>
                    <executions>
                        <execution>
                            <id>generate-swagger</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                    <configuration>
                        <skipDockerBuild>${docker.skip}</skipDockerBuild>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    
    <distributionManagement>
        <downloadUrl>http://artifactory.bellevue.agilysys.com/artifactory/repo</downloadUrl>
        <repository>
            <id>central</id>
            <name>Agilysys Release Repository</name>
            <uniqueVersion>false</uniqueVersion>
            <url>http://artifactory.bellevue.agilysys.com/artifactory/libs-release-local</url>
            <layout>default</layout>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Agilysys Snapshot Repository</name>
            <uniqueVersion>true</uniqueVersion>
            <url>http://artifactory.bellevue.agilysys.com/artifactory/libs-snapshot-local</url>
            <layout>default</layout>
        </snapshotRepository>
    </distributionManagement>
    <scm>
        <connection>scm:git:ssh://git@stash.agilysys.local:7999/pms/stayrootpom.git</connection>
        <developerConnection>scm:git:ssh://git@stash.agilysys.local:7999/pms/stayrootpom.git</developerConnection>
        <tag>stay-root-pom-74.1889.0</tag>
    </scm>
</project>
