<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ (C) 2013 Agilysys NV, LLC. All Rights Reserved. Confidential Information of Agilysys NV, LLC. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.agilysys.platform</groupId>
    <artifactId>service-parent</artifactId>
    <version>5.0.18</version>
    <packaging>pom</packaging>
    
    <name>Platform Service Parent</name>
    <description>
        THIS is the pom that service-implementations should use as their parent. See root-parent for more information.
    </description>

    <parent>
        <groupId>com.agilysys.platform</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>5.0.18</version>
        <relativePath>../spring-boot-parent</relativePath>
    </parent>

    <dependencyManagement>
        <!-- I originally thought this would have to go in root-parent, however, it turns out that for it to have priority it needs to come SECOND...
          I don't even fucking know. Explicit dependencies first is priority but imports second is priority???  -->
        <dependencies>
            <!-- This is the point of this pom: Our management first for priority-->
            <dependency>
                <groupId>com.agilysys</groupId>
                <artifactId>dependency-management-slim</artifactId>
                <version>3.0.15</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <java-version>1.8</java-version>
        
        <!-- Build and plugin properties -->
        <!--plugin and build versions only. Third party library versions declared in AgilysysDependencyManagement project pom -->
        <jacoco.version>0.8.1</jacoco.version>
        <sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
        <sonar.plugin.version>3.4.0.905</sonar.plugin.version>
        <builder.helper.plugin.version>1.7</builder.helper.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
        <maven.surefire.plugin.version>2.21.0</maven.surefire.plugin.version>
        <maven.surefire.plugin.forkCount>1</maven.surefire.plugin.forkCount>
        <maven.surefire.plugin.reuseForks>true</maven.surefire.plugin.reuseForks>
        <maven.failsafe.plugin.version>2.21.0</maven.failsafe.plugin.version>
        <maven.failsafe.plugin.forkCount>1</maven.failsafe.plugin.forkCount>
        <maven.failsafe.plugin.reuseForks>true</maven.failsafe.plugin.reuseForks>
        <build.helper.maven.plugin.version>1.8</build.helper.maven.plugin.version>
        <tomcat7.maven.plugin.version>2.2</tomcat7.maven.plugin.version>
        <maven-compiler-plugin-version>3.7.0</maven-compiler-plugin-version>
        <maven-javadoc-plugin.version>2.9</maven-javadoc-plugin.version>
        <process-exec-maven-plugin.version>0.7</process-exec-maven-plugin.version>

        <!-- Sonar/JaCoCo -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
        <jacoco.ut.file>jacoco-ut.exec</jacoco.ut.file>
        <jacoco.it.file>jacoco-it.exec</jacoco.it.file>
        <sonar.jacoco.reportPath>${jacoco.outputDir}/jacoco/${jacoco.ut.file}</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/jacoco/${jacoco.it.file}</sonar.jacoco.itReportPath>
        <!-- Optional URL to server. Default value is http://localhost:9000 -->
        <sonar.host.url>http://sonar.bellevue.agilysys.com</sonar.host.url>

        <dockerSpringBootBaseImage>docker-registry.bellevue.agilysys.com:5000/official/java:C1.8.0.212</dockerSpringBootBaseImage>
    </properties>

    <profiles>
        <profile>
            <id>sonar</id>
            <!-- When executing this profile, for the jacoco-it arg to be evaluated correctly in your external java process, include `-D=sonarEnabled` -->
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code being tested. -->
                                    <id>prepare-ut-agent</id>
                                    <phase>process-test-classes</phase>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                    <configuration>
                                        <destFile>${sonar.jacoco.reportPath}</destFile>
                                        <propertyName>jacoco.agent.ut.arg</propertyName>
                                        <append>true</append>
                                        <dumpOnExit>true</dumpOnExit>
                                    </configuration>
                                </execution>
                                
                                <execution>
                                    <id>post-ut-agent</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <configuration>
                                        <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                        <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                    </configuration>
                                </execution>
                                
                                <execution>
                                    <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code being tested. -->
                                    <id>prepare-it-agent</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                    <configuration>
                                        <destFile>${sonar.jacoco.itReportPath}</destFile>
                                        <propertyName>jacoco.agent.it.arg</propertyName>
                                        <append>true</append>
                                        <dumpOnExit>true</dumpOnExit>
                                        <classDumpDir>${jacoco.outputDir}/classes</classDumpDir>
                                        <includes><include>com/agilysys/platform/**/*</include></includes>
                                    </configuration>
                                </execution>
                                
                                <execution>
                                    <id>post-it-agent</id>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>report-integration</goal>
                                    </goals>
                                    <configuration>
                                        <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                                        <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                        <includes><include>com/agilysys/platform/**/*</include></includes>
                                    </configuration>
                                </execution>

                                <execution>
                                    <id>coverage-check</id>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                    <configuration>
                                        <!-- sonar profile is part of a non-blocking build-fork. Might as well NOT fail so we get coverage for all modules -->
                                        <haltOnFailure>false</haltOnFailure>
                                        <rules>
                                            <rule>
                                                <element>BUNDLE</element>
                                                <limits>
                                                    <limit>
                                                        <counter>INSTRUCTION</counter>
                                                        <value>COVEREDRATIO</value>
                                                        <minimum>0.70</minimum>
                                                    </limit>
                                                </limits>
                                            </rule>
                                        </rules>
                                        <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                        <excludes>
                                            <exclude>**/*Test.*</exclude>
                                            <exclude>**/*Interface.*</exclude>
                                            <exclude>**/*Dao.*</exclude>
                                            <exclude>**/*Config.*</exclude>
                                            <exclude>**/model/*.*</exclude>
                                            <exclude>**/entity/*.*</exclude>
                                        </excludes>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <argLine>${jacoco.agent.ut.arg}</argLine>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                    <configuration>
                                        <argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
                                        <!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
                                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.bazaarvoice.maven.plugins</groupId>
                            <artifactId>process-exec-maven-plugin</artifactId>
                            <version>${process-exec-maven-plugin.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <!-- Make sure these always execute, and tie-break in this order -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${sonar-jacoco-listeners.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>ArgPropertyDefaulter</id>
            <!-- This is needed to prevent NPE when jacoco plugin is not run.
                And it cannot be defaulted in root properties because the jacoco plugin sets the value after the arg is evaluated
                and given to the process-exec-maven-plugin :(  -->
            <activation>
                <property>
                    <name>!sonarEnabled</name>
                </property>
            </activation>
            <properties>
                <jacoco.agent.it.arg>-server</jacoco.agent.it.arg>
            </properties>
        </profile>

        <profile>
            <id>ITEST</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Sonar -->
        <dependency>
            <groupId>org.codehaus.sonar-plugins.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>${sonar-jacoco-listeners.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logback -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>
    </dependencies>


    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.12.4</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <configuration>
                            <name>Platform API Docs</name>
                            <description>Auto-generated REST API Documentation </description>
                            <header>&lt;h1&gt;Agilysys Platform API (${project.version})&lt;/h1&gt;</header>
                            <footer>&lt;div class="footer"&gt;Copyright (c) 2014&lt;/div&gt;</footer>
                        </configuration>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>fully.qualified.MainClass</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <fork>true</fork>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.6</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <dependencyConvergence />
                            </rules>
                            <fail>false</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <name>Agilysys Platform API Docs</name>
                    <description>Auto-generated Platform Documentation
                    </description>
                    <header>&lt;h1&gt;Agilysys Platform API (${project.version})&lt;/h1&gt;</header>
                    <footer>&lt;div class="footer"&gt;Copyright (c) 2014&lt;/div&gt;</footer>
                </configuration>
            </plugin>

            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>1.0-m4.3</version>
                <configuration>
                    <flowInitContext>
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>feature/dev</developBranchName>
                        <versionTagPrefix>version-</versionTagPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Job>${env.build-job}</Build-Job>
                            <Build-Number>${env.build-number}</Build-Number>
                            <BuildDate>${env.build-timestamp}</BuildDate>
                            <Build-Url>${env.build-url}</Build-Url>
                            <Name>${project.name}</Name>
                            <Version>${project.version}</Version>
                            <GroupId>${project.groupId}</GroupId>
                            <ArtifactId>${project.artifactId}</ArtifactId>
                            <Git-Commit>${env.git-commit}</Git-Commit>
                            <Git-Branch>${env.git-branch}</Git-Branch>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Job>${env.build-job}</Build-Job>
                            <Build-Number>${env.build-number}</Build-Number>
                            <BuildDate>${env.build-timestamp}</BuildDate>
                            <Build-Url>${env.build-url}</Build-Url>
                            <Name>${project.name}</Name>
                            <Version>${project.version}</Version>
                            <GroupId>${project.groupId}</GroupId>
                            <ArtifactId>${project.artifactId}</ArtifactId>
                            <Git-Commit>${env.git-commit}</Git-Commit>
                            <Git-Branch>${env.git-branch}</Git-Branch>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.8</version>
                <configuration>
                    <licenseName>agilysys</licenseName>
                    <licenseResolver>classpath://license</licenseResolver>
                    <inceptionYear>2013</inceptionYear>
                    <projectName>rGuestCore</projectName>
                    <organizationName>Agilysys</organizationName>
                    <excludedGroups>com.agilysys</excludedGroups>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- Uncomment to auto-add source file headers -->
                            <!-- <goal>update-file-header</goal> -->
                            <goal>update-project-license</goal>
                            <goal>add-third-party</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.agilysys</groupId>
                        <artifactId>agilysys_license</artifactId>
                        <version>0.0.2</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <forkCount>${maven.surefire.plugin.forkCount}</forkCount>
                        <reuseForks>${maven.surefire.plugin.reuseForks}</reuseForks>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <!--<useFile>false</useFile>-->
                        <excludes>
                            <exclude>**/IT*.java</exclude>
                        </excludes>
                        <excludedGroups>com.agilysys.platform.common.junit.IntegrationTestCategory</excludedGroups>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <configuration>
                        <forkCount>${maven.failsafe.plugin.forkCount}</forkCount>
                        <reuseForks>${maven.failsafe.plugin.reuseForks}</reuseForks>
                        <groups>com.agilysys.platform.common.junit.IntegrationTestCategory</groups>
                        <includes>
                            <include>**/*IT*.java, **/*IntegrationTest*.java</include>
                        </includes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>coverage-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>CLASS</element>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                            <exclude>*Interface</exclude>
                                            <exclude>*Dao</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.70</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.plugin.version}</version>
                </plugin>

                <plugin>
                    <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7.1,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>com.bazaarvoice.maven.plugins</groupId>
                    <artifactId>process-exec-maven-plugin</artifactId>
                    <version>${process-exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>com.github.exampledriven</groupId>
                    <artifactId>hierarchy-maven-plugin</artifactId>
                    <version>1.4</version>
                </plugin>
                <!-- To make suppression work we should add this plugin to pluginManagement -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>4.0.2</version>
                    <configuration>
                        <suppressionFiles>
                            <!-- The plugin has numerous issues with version matching, which triggers false positives so we need a "suppression" file to suppress false positives. -->
                            <suppressionFile>${basedir}/service/src/main/resources/owasp-suppression.xml</suppressionFile>
                        </suppressionFiles>
                        <failBuildOnCVSS>8</failBuildOnCVSS>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
